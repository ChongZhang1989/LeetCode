class Solution {
public:
    int longestValidParentheses(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int n = s.size();
    	vector<int>dp(n, 0);
    	for (int i = n - 2; i >= 0; --i) {
    		if (s[i] == ')') {
    			dp[i] = 0;
    			continue;
    		}
    		int t = i + dp[i + 1] + 1;
    		if (t < n && s[t] == ')') {
    			dp[i] = dp[i + 1] + 2;
    		} else {
    			dp[i] = 0;
    			continue;
    		}
    		if (t + 1 < n) {
    			dp[i] += dp[t + 1];
    		}
    	}
    	int globalmax = 0;
    	for (int i = 0; i < n; ++i)
    		globalmax = max(globalmax, dp[i]);
    	return globalmax;
    }
};