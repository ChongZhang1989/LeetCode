class Solution {
public:
    vector<vector<int> > generateMatrix(int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<int>tmp;
        tmp.assign(n, 0);
        vector<vector<int> >ans;
        ans.assign(n, tmp);
        int x = 0;
        int y = 0;
        int direction = 0;
        int cnt = 1;
        int circle = 0;
        for (int i = 0; i < n * n; ++i) {
            ans[x][y] = cnt++;
            switch (direction) {
                case 0:
                    y = y + 1;
                    if (y >= n - circle) {
                        y = y - 1;
                        x = x + 1;
                        direction = 1;
                    }
                    break;
                case 1:
                    x = x + 1;
                    if (x >= n - circle) {
                        x = x - 1;
                        y = y - 1;
                        direction = 2;
                    }
                    break;
                case 2:
                    y = y - 1;
                    if (y < circle) {
                        y = y + 1;
                        x = x - 1;
                        direction = 3;
                    }
                    break;
                case 3:
                    x = x - 1;
                	if (x < circle + 1) {
                		x = x + 1;
                		y = y + 1;
                		++circle;
                		direction = 0;
                	}
            }
        }
        return ans;
    }
};