/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        ListNode *nl = NULL;
        ListNode *p1, *p2, *p3;
        p1 = l1;
        p2 = l2;
        while (p1 && p2) {
            ListNode *tmp;
            if (p1->val < p2->val) {
                tmp = p1;
                p1 = p1->next;
            } else {
                tmp = p2;
                p2 = p2->next;
            }
            if (nl == NULL) {
                nl = tmp;
                p3 = tmp;
            } else {
                p3->next = tmp;
                p3 = p3->next;
            }
        }
        while (p1) {
            if (nl == NULL) {
                nl = p1;
                p3 = p1;
                p1 = p1->next;
                continue;
            }
            p3->next = p1;
            p1 = p1->next;
            p3 = p3->next;
        }
        while (p2) {
            if (nl == NULL) {
                nl = p2;
                p3 = p2;
                p2 = p2->next;
                continue;
            }
            p3->next = p2;
            p2 = p2->next;
            p3 = p3->next;
        }
        return nl;
    }
};