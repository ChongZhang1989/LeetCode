class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int> > &obstacleGrid) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<vector<int> > a = obstacleGrid;
        int m = a.size();
        if (m == 0)
            return 0;
        int n = a[0].size();
        if (n == 0)
            return 0;
        if (a[0][0] == 1)
            return 0;
        vector<vector<int> >dp;
        vector<int>tmp;
        tmp.assign(n + 1, 0);
        dp.assign(m + 1, tmp);
        dp[1][1] = 1;
        for (int i = 1; i <= m; ++i) {
            for (int j = 1; j <= n; ++j) {
                if (i == 1 && j == 1)
                    continue;
                if (a[i - 1][j - 1])
                    dp[i][j] = 0;
                else
                    dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
            }
        }
        return dp[m][n];
    }
};