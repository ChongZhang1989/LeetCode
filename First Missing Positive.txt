class Solution {
public:
    int firstMissingPositive(int A[], int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int *a = A;
        int i = 0;
        int j = 1;
        while (i < j && j < n) {
            if (a[i] <= 0 && a[j] > 0) {
        		swap(a[i], a[j]);
        	}
        	while (i < n && a[i] > 0)
        		i++;
        	j = i;
        	while (j < n && a[j] <= 0)
        		j++;
        }
        int m;
        for (m = 0; m < n && a[m] > 0; ++m) ;
        for (int i = 0; i < m; ++i) {
        	if (abs(a[i]) > m)
        		continue;
        	int p = abs(a[i]) - 1;
        	if (a[p] > 0)
        		a[p] = -a[p];
        }
        for (int i = 0; i < m; ++i) {
        	if (a[i] > 0)
        		return i + 1;	
        }
        return m + 1;
    }
};