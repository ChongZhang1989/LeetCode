class Solution {
    bool closer(int i, int j, int k, int target, int &closest)
    {
		if (abs(i + j + k - target) < abs(closest - target)) {
			closest = i + j + k;
			return true;
		}
		return false;
	}
public:
    int threeSumClosest(vector<int> &num, int target) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        sort(num.begin(), num.end());
        int a[3];
        int closest = 0;
        for (int i = 0; i < 3; ++i) {
        	a[i] = num[i];
        	closest += a[i];
        }
        int n = num.size();
        for (int i = 0; i < n; ++i) {
        	int j = i + 1;
        	int k = n - 1;
        	int tmp = num[i];
        	while (j < k) {
        		if (closer(num[i], num[j], num[k], target, closest) ) {
        			a[0] = num[i];
        			a[1] = num[j];
        			a[2] = num[k];
        		}
        		if (num[i] + num[j] + num[k] - target < 0) {
        			j++;
        		} else {
        			k--;
        		}
        	}
        }
        return a[0] + a[1] + a[2];
    }
};
