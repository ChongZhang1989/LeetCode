class Solution {
public:
    int numDistinct(string S, string T) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int n = S.size();
        int m = T.size();
        if (n == 0 || m == 0 || n < m)
            return 0;
        vector<vector<int> >dp(n, vector<int>(m, 0));
        dp[0][0] = (S[0] == T[0]);
        for (int i = 1; i < n; ++i) {
        	dp[i][0] = dp[i - 1][0] + (S[i] == T[0]);
        }
        for (int i = 1; i < m; ++i) {
        	for (int j = i; j < n; ++j) {
        		dp[j][i] = (S[j] == T[i] ? dp[j - 1][i - 1] : 0);
        		dp[j][i] += dp[j - 1][i];
        	}
        }
        return dp[n - 1][m - 1];
    }
};