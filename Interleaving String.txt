class Solution {
public:
    bool isInterleave(string s1, string s2, string s3) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.    
        int n = s1.size();
        int m = s2.size();
        if (n + m != s3.size()) return false;
        if (n == 0 && m == 0) return true;
        if (n == 0) return s2 == s3;
        if (m == 0) return s1 == s3;
        vector<vector<int> >dp(n + 1, vector<int>(m + 1, 0));
        dp[0][1] = s2[0] == s3[0];
        for (int i = 2; i <= m && dp[0][i - 1]; ++i) {
            dp[0][i] = dp[0][i - 1] && (s2[i - 1] == s3[i - 1]);
        }
        dp[1][0] = s1[0] == s3[0];
        for (int i = 2; i <= n && dp[i - 1][0]; ++i) {
            dp[i][0] = dp[i - 1][0] && (s1[i - 1] == s3[i - 1]);
        }
        for (int i = 1; i <= n; ++i) {
            for (int j = 1; j <= m; ++j) {
                    dp[i][j] = dp[i - 1][j] & (s1[i - 1] == s3[i + j - 1]);
                    dp[i][j] |= dp[i][j - 1] & (s2[j - 1] == s3[i + j - 1]);
            }
        }
        return dp[n][m];
    }
};