/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *mergeKLists(vector<ListNode *> &lists) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int n = lists.size();
        ListNode *head = NULL;
        ListNode *point = NULL;
        while (1) {
            int flg = 1;
        	int _min = 0x7fffffff;
        	int p = -1;
        	for (int i = 0; i < n; ++i) {
        		if (lists[i] == NULL) {
        			continue;
        		}
        		flg = 0;
        		if (lists[i]->val < _min) {
        			p = i;
        			_min = lists[i]->val;
        		}
        	}
        	if (p != -1) {
        		if (head == NULL) {
        			head = lists[p];
        			point = head;
        		} else {
        			point->next = lists[p];
        			point = point->next;
        		}
        		lists[p] = lists[p]->next;
        	}
        	if (flg)
        		break;
        }
        return head;
    }
};